
;; Function void myKeyboard(unsigned char, int, int) (_Z10myKeyboardhii)



Pass 0

  Register 58 costs: AREG:17000 DREG:17000 CREG:17000 BREG:17000 SIREG:17000 DIREG:17000 AD_REGS:17000 Q_REGS:17000 NON_Q_REGS:17000 INDEX_REGS:17000 LEGACY_REGS:17000 GENERAL_REGS:17000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:10000
  Register 59 costs: AREG:17000 DREG:17000 CREG:17000 BREG:17000 SIREG:17000 DIREG:17000 AD_REGS:17000 Q_REGS:17000 NON_Q_REGS:17000 INDEX_REGS:17000 LEGACY_REGS:17000 GENERAL_REGS:17000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:15000
  Register 60 costs: AREG:17000 DREG:17000 CREG:17000 BREG:17000 SIREG:17000 DIREG:17000 AD_REGS:17000 Q_REGS:17000 NON_Q_REGS:17000 INDEX_REGS:17000 LEGACY_REGS:17000 GENERAL_REGS:17000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:10000
  Register 61 costs: AREG:17000 DREG:17000 CREG:17000 BREG:17000 SIREG:17000 DIREG:17000 AD_REGS:17000 Q_REGS:17000 NON_Q_REGS:17000 INDEX_REGS:17000 LEGACY_REGS:17000 GENERAL_REGS:17000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:15000
  Register 62 costs: AREG:17000 DREG:17000 CREG:17000 BREG:17000 SIREG:17000 DIREG:17000 AD_REGS:17000 Q_REGS:17000 NON_Q_REGS:17000 INDEX_REGS:17000 LEGACY_REGS:17000 GENERAL_REGS:17000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:10000
  Register 63 costs: AREG:17000 DREG:17000 CREG:17000 BREG:17000 SIREG:17000 DIREG:17000 AD_REGS:17000 Q_REGS:17000 NON_Q_REGS:17000 INDEX_REGS:17000 LEGACY_REGS:17000 GENERAL_REGS:17000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:15000
  Register 64 costs: AREG:17000 DREG:17000 CREG:17000 BREG:17000 SIREG:17000 DIREG:17000 AD_REGS:17000 Q_REGS:17000 NON_Q_REGS:17000 INDEX_REGS:17000 LEGACY_REGS:17000 GENERAL_REGS:17000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:10000
  Register 65 costs: AREG:17000 DREG:17000 CREG:17000 BREG:17000 SIREG:17000 DIREG:17000 AD_REGS:17000 Q_REGS:17000 NON_Q_REGS:17000 INDEX_REGS:17000 LEGACY_REGS:17000 GENERAL_REGS:17000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:15000
  Register 66 costs: AREG:17000 DREG:17000 CREG:17000 BREG:17000 SIREG:17000 DIREG:17000 AD_REGS:17000 Q_REGS:17000 NON_Q_REGS:17000 INDEX_REGS:17000 LEGACY_REGS:17000 GENERAL_REGS:17000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:10000
  Register 67 costs: AREG:17000 DREG:17000 CREG:17000 BREG:17000 SIREG:17000 DIREG:17000 AD_REGS:17000 Q_REGS:17000 NON_Q_REGS:17000 INDEX_REGS:17000 LEGACY_REGS:17000 GENERAL_REGS:17000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:15000
  Register 68 costs: AREG:17000 DREG:17000 CREG:17000 BREG:17000 SIREG:17000 DIREG:17000 AD_REGS:17000 Q_REGS:17000 NON_Q_REGS:17000 INDEX_REGS:17000 LEGACY_REGS:17000 GENERAL_REGS:17000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:10000
  Register 69 costs: AREG:17000 DREG:17000 CREG:17000 BREG:17000 SIREG:17000 DIREG:17000 AD_REGS:17000 Q_REGS:17000 NON_Q_REGS:17000 INDEX_REGS:17000 LEGACY_REGS:17000 GENERAL_REGS:17000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:15000
  Register 70 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2000 INDEX_REGS:2000 LEGACY_REGS:2000 GENERAL_REGS:2000 MEM:8000
  Register 71 costs: AREG:17000 DREG:17000 CREG:17000 BREG:17000 SIREG:17000 DIREG:17000 AD_REGS:17000 Q_REGS:17000 NON_Q_REGS:17000 INDEX_REGS:17000 LEGACY_REGS:17000 GENERAL_REGS:17000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:15000
  Register 72 costs: AREG:17000 DREG:17000 CREG:17000 BREG:17000 SIREG:17000 DIREG:17000 AD_REGS:17000 Q_REGS:17000 NON_Q_REGS:17000 INDEX_REGS:17000 LEGACY_REGS:17000 GENERAL_REGS:17000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:15000
  Register 73 costs: AREG:17000 DREG:17000 CREG:17000 BREG:17000 SIREG:17000 DIREG:17000 AD_REGS:17000 Q_REGS:17000 NON_Q_REGS:17000 INDEX_REGS:17000 LEGACY_REGS:17000 GENERAL_REGS:17000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:15000
  Register 74 costs: AREG:17000 DREG:17000 CREG:17000 BREG:17000 SIREG:17000 DIREG:17000 AD_REGS:17000 Q_REGS:17000 NON_Q_REGS:17000 INDEX_REGS:17000 LEGACY_REGS:17000 GENERAL_REGS:17000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:15000
  Register 75 costs: AREG:17000 DREG:17000 CREG:17000 BREG:17000 SIREG:17000 DIREG:17000 AD_REGS:17000 Q_REGS:17000 NON_Q_REGS:17000 INDEX_REGS:17000 LEGACY_REGS:17000 GENERAL_REGS:17000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:15000
  Register 76 costs: AREG:17000 DREG:17000 CREG:17000 BREG:17000 SIREG:17000 DIREG:17000 AD_REGS:17000 Q_REGS:17000 NON_Q_REGS:17000 INDEX_REGS:17000 LEGACY_REGS:17000 GENERAL_REGS:17000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:15000

  Register 53 pref FLOAT_INT_SSE_REGS or none
  Register 54 pref FLOAT_INT_SSE_REGS or none
  Register 55 pref FLOAT_INT_SSE_REGS or none
  Register 56 pref FLOAT_INT_SSE_REGS or none
  Register 57 pref FLOAT_INT_SSE_REGS or none
  Register 58 pref FLOAT_REGS or none
  Register 59 pref FLOAT_REGS or none
  Register 60 pref FLOAT_REGS or none
  Register 61 pref FLOAT_REGS or none
  Register 62 pref FLOAT_REGS or none
  Register 63 pref FLOAT_REGS or none
  Register 64 pref FLOAT_REGS or none
  Register 65 pref FLOAT_REGS or none
  Register 66 pref FLOAT_REGS or none
  Register 67 pref FLOAT_REGS or none
  Register 68 pref FLOAT_REGS or none
  Register 69 pref FLOAT_REGS or none
  Register 70 pref Q_REGS, else GENERAL_REGS
  Register 71 pref FLOAT_REGS or none
  Register 72 pref FLOAT_REGS or none
  Register 73 pref FLOAT_REGS or none
  Register 74 pref FLOAT_REGS or none
  Register 75 pref FLOAT_REGS or none
  Register 76 pref FLOAT_REGS or none
77 registers.

Register 58 used 2 times across 2 insns in block 19; set 1 time; FLOAT_REGS or none.

Register 59 used 2 times across 3 insns in block 19; set 1 time; FLOAT_REGS or none.

Register 60 used 2 times across 2 insns in block 16; set 1 time; FLOAT_REGS or none.

Register 61 used 2 times across 3 insns in block 16; set 1 time; FLOAT_REGS or none.

Register 62 used 2 times across 2 insns in block 13; set 1 time; FLOAT_REGS or none.

Register 63 used 2 times across 3 insns in block 13; set 1 time; FLOAT_REGS or none.

Register 64 used 2 times across 2 insns in block 10; set 1 time; FLOAT_REGS or none.

Register 65 used 2 times across 3 insns in block 10; set 1 time; FLOAT_REGS or none.

Register 66 used 2 times across 2 insns in block 7; set 1 time; FLOAT_REGS or none.

Register 67 used 2 times across 3 insns in block 7; set 1 time; FLOAT_REGS or none.

Register 68 used 2 times across 2 insns in block 4; set 1 time; FLOAT_REGS or none.

Register 69 used 2 times across 3 insns in block 4; set 1 time; FLOAT_REGS or none.

Register 70 used 2 times across 2 insns in block 2; set 1 time; pref Q_REGS, else GENERAL_REGS.

Register 71 used 2 times across 2 insns in block 4; set 1 time; FLOAT_REGS or none.

Register 72 used 2 times across 2 insns in block 7; set 1 time; FLOAT_REGS or none.

Register 73 used 2 times across 2 insns in block 10; set 1 time; FLOAT_REGS or none.

Register 74 used 2 times across 2 insns in block 13; set 1 time; FLOAT_REGS or none.

Register 75 used 2 times across 2 insns in block 16; set 1 time; FLOAT_REGS or none.

Register 76 used 2 times across 2 insns in block 19; set 1 time; FLOAT_REGS or none.

21 basic blocks, 32 edges.

Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 0.
Predecessors:  ENTRY (fallthru)
Successors:  4 3 (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 0.
Predecessors:  2 (fallthru)
Successors:  4 (fallthru) 5
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 0.
Predecessors:  2 3 (fallthru)
Successors:  5 (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 0.
Predecessors:  3 4 (fallthru)
Successors:  7 6 (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 0.
Predecessors:  5 (fallthru)
Successors:  7 (fallthru) 8
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 0.
Predecessors:  5 6 (fallthru)
Successors:  8 (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 0.
Predecessors:  6 7 (fallthru)
Successors:  10 9 (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 0.
Predecessors:  8 (fallthru)
Successors:  10 (fallthru) 11
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 0.
Predecessors:  8 9 (fallthru)
Successors:  11 (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 0.
Predecessors:  9 10 (fallthru)
Successors:  13 12 (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 0.
Predecessors:  11 (fallthru)
Successors:  13 (fallthru) 14
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 0.
Predecessors:  11 12 (fallthru)
Successors:  14 (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 0.
Predecessors:  12 13 (fallthru)
Successors:  16 15 (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 0.
Predecessors:  14 (fallthru)
Successors:  16 (fallthru) 17
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

Basic block 16 , prev 15, next 17, loop_depth 0, count 0, freq 0.
Predecessors:  14 15 (fallthru)
Successors:  17 (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

Basic block 17 , prev 16, next 18, loop_depth 0, count 0, freq 0.
Predecessors:  15 16 (fallthru)
Successors:  19 18 (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

Basic block 18 , prev 17, next 19, loop_depth 0, count 0, freq 0.
Predecessors:  17 (fallthru)
Successors:  19 (fallthru) 20
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

Basic block 19 , prev 18, next 20, loop_depth 0, count 0, freq 0.
Predecessors:  17 18 (fallthru)
Successors:  20 (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

Basic block 20 , prev 19, next 1, loop_depth 0, count 0, freq 0.
Predecessors:  19 (fallthru) 18
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Register 58 in 8.
;; Register 59 in 8.
;; Register 60 in 8.
;; Register 61 in 8.
;; Register 62 in 8.
;; Register 63 in 8.
;; Register 64 in 8.
;; Register 65 in 8.
;; Register 66 in 8.
;; Register 67 in 8.
;; Register 68 in 8.
;; Register 69 in 8.
;; Register 70 in 0.
;; Register 71 in 9.
;; Register 72 in 9.
;; Register 73 in 9.
;; Register 74 in 9.
;; Register 75 in 9.
;; Register 76 in 9.
(note 1 0 6 ("main.cpp") 58)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 6 3 2 NOTE_INSN_DELETED)

(insn 3 2 4 2 main.cpp:58 (set (reg:SI 70 [ key ])
        (mem/c/i:SI (reg/f:SI 16 argp) [0 key+0 S1 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 4 3 5 2 main.cpp:58 (set (mem/c/i:QI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffc])) [0 key+0 S1 A8])
        (subreg:QI (reg:SI 70 [ key ]) 0)) 43 {*movqi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 70 [ key ])
        (nil)))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 5 9 2 ("main.cpp") 59)

(insn 9 8 10 2 main.cpp:59 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:QI (plus:SI (reg/f:SI 20 frame)
                    (const_int -4 [0xfffffffc])) [0 key+0 S1 A8])
            (const_int 60 [0x3c]))) 7 {*cmpqi_1} (nil)
    (nil))

(jump_insn 10 9 12 2 main.cpp:59 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 15)
            (pc))) 365 {*jcc_1} (nil)
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 12 10 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 14 3 main.cpp:59 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:QI (plus:SI (reg/f:SI 20 frame)
                    (const_int -4 [0xfffffffc])) [0 key+0 S1 A8])
            (const_int 44 [0x2c]))) 7 {*cmpqi_1} (nil)
    (nil))

(jump_insn 14 13 15 3 main.cpp:59 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 21)
            (pc))) 365 {*jcc_1} (nil)
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 15 14 16 4 2 "" [1 uses])

(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 4 main.cpp:59 (set (reg:SF 69 [ z_pos.13 ])
        (mem/c/i:SF (symbol_ref:SI ("z_pos") [flags 0x2] <var_decl 01FDCC08 z_pos>) [0 z_pos+0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 18 17 19 4 main.cpp:59 (set (reg:SF 71)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC0") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (expr_list:REG_EQUAL (const_double:SF -858993408 [0xcccccd00] 1.00000001490116119384765625e-1 [0x0.cccccdp-3])
        (nil)))

(insn 19 18 20 4 main.cpp:59 (set (reg:SF 68 [ D.34487 ])
        (minus:SF (reg:SF 69 [ z_pos.13 ])
            (reg:SF 71))) 419 {*fop_sf_1_i387} (nil)
    (expr_list:REG_DEAD (reg:SF 69 [ z_pos.13 ])
        (expr_list:REG_DEAD (reg:SF 71)
            (nil))))

(insn 20 19 21 4 main.cpp:59 (set (mem/c/i:SF (symbol_ref:SI ("z_pos") [flags 0x2] <var_decl 01FDCC08 z_pos>) [0 z_pos+0 S4 A32])
        (reg:SF 68 [ D.34487 ])) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 68 [ D.34487 ])
        (nil)))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 21 20 22 5 4 "" [1 uses])

(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 23 22 24 5 ("main.cpp") 60)

(insn 24 23 25 5 main.cpp:60 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:QI (plus:SI (reg/f:SI 20 frame)
                    (const_int -4 [0xfffffffc])) [0 key+0 S1 A8])
            (const_int 62 [0x3e]))) 7 {*cmpqi_1} (nil)
    (nil))

(jump_insn 25 24 27 5 main.cpp:60 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 365 {*jcc_1} (nil)
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 27 25 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 29 6 main.cpp:60 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:QI (plus:SI (reg/f:SI 20 frame)
                    (const_int -4 [0xfffffffc])) [0 key+0 S1 A8])
            (const_int 46 [0x2e]))) 7 {*cmpqi_1} (nil)
    (nil))

(jump_insn 29 28 30 6 main.cpp:60 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) 365 {*jcc_1} (nil)
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 30 29 31 7 5 "" [1 uses])

(note 31 30 32 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 7 main.cpp:60 (set (reg:SF 67 [ z_pos.14 ])
        (mem/c/i:SF (symbol_ref:SI ("z_pos") [flags 0x2] <var_decl 01FDCC08 z_pos>) [0 z_pos+0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 33 32 34 7 main.cpp:60 (set (reg:SF 72)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC0") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (expr_list:REG_EQUAL (const_double:SF -858993408 [0xcccccd00] 1.00000001490116119384765625e-1 [0x0.cccccdp-3])
        (nil)))

(insn 34 33 35 7 main.cpp:60 (set (reg:SF 66 [ D.34491 ])
        (plus:SF (reg:SF 67 [ z_pos.14 ])
            (reg:SF 72))) 416 {*fop_sf_comm_i387} (nil)
    (expr_list:REG_DEAD (reg:SF 67 [ z_pos.14 ])
        (expr_list:REG_DEAD (reg:SF 72)
            (nil))))

(insn 35 34 36 7 main.cpp:60 (set (mem/c/i:SF (symbol_ref:SI ("z_pos") [flags 0x2] <var_decl 01FDCC08 z_pos>) [0 z_pos+0 S4 A32])
        (reg:SF 66 [ D.34491 ])) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 66 [ D.34491 ])
        (nil)))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 36 35 37 8 7 "" [1 uses])

(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 38 37 39 8 ("main.cpp") 61)

(insn 39 38 40 8 main.cpp:61 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:QI (plus:SI (reg/f:SI 20 frame)
                    (const_int -4 [0xfffffffc])) [0 key+0 S1 A8])
            (const_int 87 [0x57]))) 7 {*cmpqi_1} (nil)
    (nil))

(jump_insn 40 39 42 8 main.cpp:61 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 45)
            (pc))) 365 {*jcc_1} (nil)
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 42 40 43 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 44 9 main.cpp:61 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:QI (plus:SI (reg/f:SI 20 frame)
                    (const_int -4 [0xfffffffc])) [0 key+0 S1 A8])
            (const_int 119 [0x77]))) 7 {*cmpqi_1} (nil)
    (nil))

(jump_insn 44 43 45 9 main.cpp:61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) 365 {*jcc_1} (nil)
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
;; End of basic block 9, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 45 44 46 10 8 "" [1 uses])

(note 46 45 47 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 47 46 48 10 main.cpp:61 (set (reg:SF 65 [ y_pos.15 ])
        (mem/c/i:SF (symbol_ref:SI ("y_pos") [flags 0x2] <var_decl 01FDCC60 y_pos>) [0 y_pos+0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 48 47 49 10 main.cpp:61 (set (reg:SF 73)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC0") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (expr_list:REG_EQUAL (const_double:SF -858993408 [0xcccccd00] 1.00000001490116119384765625e-1 [0x0.cccccdp-3])
        (nil)))

(insn 49 48 50 10 main.cpp:61 (set (reg:SF 64 [ D.34495 ])
        (plus:SF (reg:SF 65 [ y_pos.15 ])
            (reg:SF 73))) 416 {*fop_sf_comm_i387} (nil)
    (expr_list:REG_DEAD (reg:SF 65 [ y_pos.15 ])
        (expr_list:REG_DEAD (reg:SF 73)
            (nil))))

(insn 50 49 51 10 main.cpp:61 (set (mem/c/i:SF (symbol_ref:SI ("y_pos") [flags 0x2] <var_decl 01FDCC60 y_pos>) [0 y_pos+0 S4 A32])
        (reg:SF 64 [ D.34495 ])) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 64 [ D.34495 ])
        (nil)))
;; End of basic block 10, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 11, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 51 50 52 11 10 "" [1 uses])

(note 52 51 53 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 53 52 54 11 ("main.cpp") 62)

(insn 54 53 55 11 main.cpp:62 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:QI (plus:SI (reg/f:SI 20 frame)
                    (const_int -4 [0xfffffffc])) [0 key+0 S1 A8])
            (const_int 83 [0x53]))) 7 {*cmpqi_1} (nil)
    (nil))

(jump_insn 55 54 57 11 main.cpp:62 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 60)
            (pc))) 365 {*jcc_1} (nil)
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
;; End of basic block 11, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 12, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 57 55 58 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 58 57 59 12 main.cpp:62 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:QI (plus:SI (reg/f:SI 20 frame)
                    (const_int -4 [0xfffffffc])) [0 key+0 S1 A8])
            (const_int 115 [0x73]))) 7 {*cmpqi_1} (nil)
    (nil))

(jump_insn 59 58 60 12 main.cpp:62 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 66)
            (pc))) 365 {*jcc_1} (nil)
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
;; End of basic block 12, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 13, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 60 59 61 13 11 "" [1 uses])

(note 61 60 62 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 62 61 63 13 main.cpp:62 (set (reg:SF 63 [ y_pos.16 ])
        (mem/c/i:SF (symbol_ref:SI ("y_pos") [flags 0x2] <var_decl 01FDCC60 y_pos>) [0 y_pos+0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 63 62 64 13 main.cpp:62 (set (reg:SF 74)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC0") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (expr_list:REG_EQUAL (const_double:SF -858993408 [0xcccccd00] 1.00000001490116119384765625e-1 [0x0.cccccdp-3])
        (nil)))

(insn 64 63 65 13 main.cpp:62 (set (reg:SF 62 [ D.34499 ])
        (minus:SF (reg:SF 63 [ y_pos.16 ])
            (reg:SF 74))) 419 {*fop_sf_1_i387} (nil)
    (expr_list:REG_DEAD (reg:SF 63 [ y_pos.16 ])
        (expr_list:REG_DEAD (reg:SF 74)
            (nil))))

(insn 65 64 66 13 main.cpp:62 (set (mem/c/i:SF (symbol_ref:SI ("y_pos") [flags 0x2] <var_decl 01FDCC60 y_pos>) [0 y_pos+0 S4 A32])
        (reg:SF 62 [ D.34499 ])) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 62 [ D.34499 ])
        (nil)))
;; End of basic block 13, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 14, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 66 65 67 14 13 "" [1 uses])

(note 67 66 68 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 68 67 69 14 ("main.cpp") 63)

(insn 69 68 70 14 main.cpp:63 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:QI (plus:SI (reg/f:SI 20 frame)
                    (const_int -4 [0xfffffffc])) [0 key+0 S1 A8])
            (const_int 100 [0x64]))) 7 {*cmpqi_1} (nil)
    (nil))

(jump_insn 70 69 72 14 main.cpp:63 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 75)
            (pc))) 365 {*jcc_1} (nil)
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
;; End of basic block 14, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 15, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 72 70 73 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 73 72 74 15 main.cpp:63 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:QI (plus:SI (reg/f:SI 20 frame)
                    (const_int -4 [0xfffffffc])) [0 key+0 S1 A8])
            (const_int 100 [0x64]))) 7 {*cmpqi_1} (nil)
    (nil))

(jump_insn 74 73 75 15 main.cpp:63 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 81)
            (pc))) 365 {*jcc_1} (nil)
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
;; End of basic block 15, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 16, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 75 74 76 16 14 "" [1 uses])

(note 76 75 77 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 77 76 78 16 main.cpp:63 (set (reg:SF 61 [ x_pos.17 ])
        (mem/c/i:SF (symbol_ref:SI ("x_pos") [flags 0x2] <var_decl 01FDCCB8 x_pos>) [0 x_pos+0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 78 77 79 16 main.cpp:63 (set (reg:SF 75)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC0") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (expr_list:REG_EQUAL (const_double:SF -858993408 [0xcccccd00] 1.00000001490116119384765625e-1 [0x0.cccccdp-3])
        (nil)))

(insn 79 78 80 16 main.cpp:63 (set (reg:SF 60 [ D.34503 ])
        (plus:SF (reg:SF 61 [ x_pos.17 ])
            (reg:SF 75))) 416 {*fop_sf_comm_i387} (nil)
    (expr_list:REG_DEAD (reg:SF 61 [ x_pos.17 ])
        (expr_list:REG_DEAD (reg:SF 75)
            (nil))))

(insn 80 79 81 16 main.cpp:63 (set (mem/c/i:SF (symbol_ref:SI ("x_pos") [flags 0x2] <var_decl 01FDCCB8 x_pos>) [0 x_pos+0 S4 A32])
        (reg:SF 60 [ D.34503 ])) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 60 [ D.34503 ])
        (nil)))
;; End of basic block 16, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 17, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 81 80 82 17 16 "" [1 uses])

(note 82 81 83 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note 83 82 84 17 ("main.cpp") 64)

(insn 84 83 85 17 main.cpp:64 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:QI (plus:SI (reg/f:SI 20 frame)
                    (const_int -4 [0xfffffffc])) [0 key+0 S1 A8])
            (const_int 97 [0x61]))) 7 {*cmpqi_1} (nil)
    (nil))

(jump_insn 85 84 87 17 main.cpp:64 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 90)
            (pc))) 365 {*jcc_1} (nil)
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
;; End of basic block 17, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 18, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 87 85 88 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 88 87 89 18 main.cpp:64 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:QI (plus:SI (reg/f:SI 20 frame)
                    (const_int -4 [0xfffffffc])) [0 key+0 S1 A8])
            (const_int 97 [0x61]))) 7 {*cmpqi_1} (nil)
    (nil))

(jump_insn 89 88 90 18 main.cpp:64 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:SI 103)
            (pc))) 365 {*jcc_1} (nil)
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
;; End of basic block 18, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 19, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 90 89 91 19 17 "" [1 uses])

(note 91 90 92 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 92 91 93 19 main.cpp:64 (set (reg:SF 59 [ x_pos.18 ])
        (mem/c/i:SF (symbol_ref:SI ("x_pos") [flags 0x2] <var_decl 01FDCCB8 x_pos>) [0 x_pos+0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 93 92 94 19 main.cpp:64 (set (reg:SF 76)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC0") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (expr_list:REG_EQUAL (const_double:SF -858993408 [0xcccccd00] 1.00000001490116119384765625e-1 [0x0.cccccdp-3])
        (nil)))

(insn 94 93 95 19 main.cpp:64 (set (reg:SF 58 [ D.34507 ])
        (minus:SF (reg:SF 59 [ x_pos.18 ])
            (reg:SF 76))) 419 {*fop_sf_1_i387} (nil)
    (expr_list:REG_DEAD (reg:SF 59 [ x_pos.18 ])
        (expr_list:REG_DEAD (reg:SF 76)
            (nil))))

(insn 95 94 98 19 main.cpp:64 (set (mem/c/i:SF (symbol_ref:SI ("x_pos") [flags 0x2] <var_decl 01FDCCB8 x_pos>) [0 x_pos+0 S4 A32])
        (reg:SF 58 [ D.34507 ])) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 58 [ D.34507 ])
        (nil)))
;; End of basic block 19, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 98 95 99 NOTE_INSN_FUNCTION_END)

(note 99 98 103 ("main.cpp") 65)

;; Start of basic block 20, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 103 99 106 20 20 "" [1 uses])

(note 106 103 0 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 20, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void init() (_Z4initv)



Pass 0

  Register 58 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 59 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 60 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 61 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 62 costs: AD_REGS:62000 Q_REGS:62000 NON_Q_REGS:62000 INDEX_REGS:62000 LEGACY_REGS:62000 GENERAL_REGS:62000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:42000 FP_SECOND_SSE_REGS:42000 FLOAT_SSE_REGS:42000 FLOAT_INT_REGS:62000 INT_SSE_REGS:62000 FLOAT_INT_SSE_REGS:62000 ALL_REGS:62000 MEM:18000
  Register 63 costs: AD_REGS:62000 Q_REGS:62000 NON_Q_REGS:62000 INDEX_REGS:62000 LEGACY_REGS:62000 GENERAL_REGS:62000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:42000 FP_SECOND_SSE_REGS:42000 FLOAT_SSE_REGS:42000 FLOAT_INT_REGS:62000 INT_SSE_REGS:62000 FLOAT_INT_SSE_REGS:62000 ALL_REGS:62000 MEM:18000
  Register 64 costs: AD_REGS:62000 Q_REGS:62000 NON_Q_REGS:62000 INDEX_REGS:62000 LEGACY_REGS:62000 GENERAL_REGS:62000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:42000 FP_SECOND_SSE_REGS:42000 FLOAT_SSE_REGS:42000 FLOAT_INT_REGS:62000 INT_SSE_REGS:62000 FLOAT_INT_SSE_REGS:62000 ALL_REGS:62000 MEM:18000
  Register 65 costs: AD_REGS:62000 Q_REGS:62000 NON_Q_REGS:62000 INDEX_REGS:62000 LEGACY_REGS:62000 GENERAL_REGS:62000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:42000 FP_SECOND_SSE_REGS:42000 FLOAT_SSE_REGS:42000 FLOAT_INT_REGS:62000 INT_SSE_REGS:62000 FLOAT_INT_SSE_REGS:62000 ALL_REGS:62000 MEM:18000

  Register 53 pref FLOAT_INT_SSE_REGS or none
  Register 54 pref FLOAT_INT_SSE_REGS or none
  Register 55 pref FLOAT_INT_SSE_REGS or none
  Register 56 pref FLOAT_INT_SSE_REGS or none
  Register 57 pref FLOAT_INT_SSE_REGS or none
  Register 58 pref FLOAT_INT_REGS or none
  Register 59 pref FLOAT_INT_REGS or none
  Register 60 pref FLOAT_INT_REGS or none
  Register 61 pref FLOAT_INT_REGS or none
  Register 62 pref FLOAT_REGS or none
  Register 63 pref FLOAT_REGS or none
  Register 64 pref FLOAT_REGS or none
  Register 65 pref FLOAT_REGS or none
66 registers.

Register 58 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 59 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 60 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 61 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 62 used 2 times across 2 insns in block 2; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 63 used 2 times across 2 insns in block 2; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 64 used 2 times across 2 insns in block 2; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 65 used 2 times across 2 insns in block 2; set 1 time; 8 bytes; FLOAT_REGS or none.

3 basic blocks, 2 edges.

Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 0.
Predecessors:  ENTRY (fallthru)
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Register 58 in 0.
;; Register 59 in 0.
;; Register 60 in 0.
;; Register 61 in 0.
;; Register 62 in 8.
;; Register 63 in 8.
;; Register 64 in 8.
;; Register 65 in 8.
(note 1 0 3 ("main.cpp") 67)

(note 3 1 5 2 NOTE_INSN_FUNCTION_BEG)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 5 3 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 5 7 2 ("main.cpp") 68)

(insn 7 6 8 2 main.cpp:68 (set (reg:SF 58)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC2") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 8 7 9 2 main.cpp:68 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SF 58)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 58)
        (nil)))

(insn 9 8 10 2 main.cpp:68 (set (reg:SF 59)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC3") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 10 9 11 2 main.cpp:68 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SF 59)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 59)
        (nil)))

(insn 11 10 12 2 main.cpp:68 (set (reg:SF 60)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC3") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 12 11 13 2 main.cpp:68 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SF 60)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 60)
        (nil)))

(insn 13 12 14 2 main.cpp:68 (set (reg:SF 61)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC2") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 14 13 15 2 main.cpp:68 (set (mem:SF (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SF 61)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 61)
        (nil)))

(call_insn 15 14 16 2 main.cpp:68 (parallel [
            (call (mem:QI (symbol_ref:SI ("glClearColor@16") [flags 0x41] <function_decl 01FF6D20 glClearColor>) [0 S1 A8])
                (const_int 16 [0x10]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 16 15 17 2 main.cpp:68 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -16 [0xfffffff0])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 17 16 18 2 ("main.cpp") 69)

(insn 18 17 19 2 main.cpp:69 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (const_int 5889 [0x1701])) 34 {*movsi_1} (nil)
    (nil))

(call_insn 19 18 20 2 main.cpp:69 (parallel [
            (call (mem:QI (symbol_ref:SI ("glMatrixMode@4") [flags 0x41] <function_decl 02015540 glMatrixMode>) [0 S1 A8])
                (const_int 4 [0x4]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 20 19 21 2 main.cpp:69 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 21 20 22 2 ("main.cpp") 70)

(call_insn 22 21 23 2 main.cpp:70 (call (mem:QI (symbol_ref:SI ("glLoadIdentity@0") [flags 0x41] <function_decl 0200ED90 glLoadIdentity>) [0 S1 A8])
        (const_int 0 [0x0])) 385 {*call_0} (nil)
    (nil)
    (nil))

(note 23 22 24 2 ("main.cpp") 71)

(insn 24 23 25 2 main.cpp:71 (set (reg:DF 62)
        (mem/u/c/i:DF (symbol_ref/u:SI ("*LC4") [flags 0x2]) [0 S8 A64])) 63 {*movdf_nointeger} (nil)
    (nil))

(insn 25 24 26 2 main.cpp:71 (set (mem:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [0 S8 A32])
        (reg:DF 62)) 63 {*movdf_nointeger} (nil)
    (expr_list:REG_DEAD (reg:DF 62)
        (nil)))

(insn 26 25 27 2 main.cpp:71 (set (reg:DF 63)
        (mem/u/c/i:DF (symbol_ref/u:SI ("*LC5") [flags 0x2]) [0 S8 A64])) 63 {*movdf_nointeger} (nil)
    (nil))

(insn 27 26 28 2 main.cpp:71 (set (mem:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [0 S8 A32])
        (reg:DF 63)) 63 {*movdf_nointeger} (nil)
    (expr_list:REG_DEAD (reg:DF 63)
        (nil)))

(insn 28 27 29 2 main.cpp:71 (set (reg:DF 64)
        (mem/u/c/i:DF (symbol_ref/u:SI ("*LC6") [flags 0x2]) [0 S8 A64])) 63 {*movdf_nointeger} (nil)
    (nil))

(insn 29 28 30 2 main.cpp:71 (set (mem:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S8 A32])
        (reg:DF 64)) 63 {*movdf_nointeger} (nil)
    (expr_list:REG_DEAD (reg:DF 64)
        (nil)))

(insn 30 29 31 2 main.cpp:71 (set (reg:DF 65)
        (mem/u/c/i:DF (symbol_ref/u:SI ("*LC7") [flags 0x2]) [0 S8 A64])) 63 {*movdf_nointeger} (nil)
    (nil))

(insn 31 30 32 2 main.cpp:71 (set (mem:DF (reg/f:SI 7 sp) [0 S8 A32])
        (reg:DF 65)) 63 {*movdf_nointeger} (nil)
    (expr_list:REG_DEAD (reg:DF 65)
        (nil)))

(call_insn 32 31 33 2 main.cpp:71 (parallel [
            (call (mem:QI (symbol_ref:SI ("gluPerspective@32") [flags 0x41] <function_decl 0202EEE0 gluPerspective>) [0 S1 A8])
                (const_int 32 [0x20]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 33 32 34 2 main.cpp:71 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -32 [0xffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 34 33 35 2 ("main.cpp") 72)

(insn 35 34 36 2 main.cpp:72 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (const_int 5888 [0x1700])) 34 {*movsi_1} (nil)
    (nil))

(call_insn 36 35 37 2 main.cpp:72 (parallel [
            (call (mem:QI (symbol_ref:SI ("glMatrixMode@4") [flags 0x41] <function_decl 02015540 glMatrixMode>) [0 S1 A8])
                (const_int 4 [0x4]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 37 36 38 2 main.cpp:72 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 38 37 39 NOTE_INSN_FUNCTION_END)

(note 39 38 0 ("main.cpp") 73)


;; Function void myTimeOut(int) (_Z9myTimeOuti)



Pass 0

  Register 58 costs: AREG:17000 DREG:17000 CREG:17000 BREG:17000 SIREG:17000 DIREG:17000 AD_REGS:17000 Q_REGS:17000 NON_Q_REGS:17000 INDEX_REGS:17000 LEGACY_REGS:17000 GENERAL_REGS:17000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:10000
  Register 59 costs: AREG:17000 DREG:17000 CREG:17000 BREG:17000 SIREG:17000 DIREG:17000 AD_REGS:17000 Q_REGS:17000 NON_Q_REGS:17000 INDEX_REGS:17000 LEGACY_REGS:17000 GENERAL_REGS:17000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:15000
  Register 60 costs: AREG:17000 DREG:17000 CREG:17000 BREG:17000 SIREG:17000 DIREG:17000 AD_REGS:17000 Q_REGS:17000 NON_Q_REGS:17000 INDEX_REGS:17000 LEGACY_REGS:17000 GENERAL_REGS:17000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:15000

  Register 53 pref FLOAT_INT_SSE_REGS or none
  Register 54 pref FLOAT_INT_SSE_REGS or none
  Register 55 pref FLOAT_INT_SSE_REGS or none
  Register 56 pref FLOAT_INT_SSE_REGS or none
  Register 57 pref FLOAT_INT_SSE_REGS or none
  Register 58 pref FLOAT_REGS or none
  Register 59 pref FLOAT_REGS or none
  Register 60 pref FLOAT_REGS or none
61 registers.

Register 58 used 2 times across 2 insns in block 2; set 1 time; FLOAT_REGS or none.

Register 59 used 2 times across 3 insns in block 2; set 1 time; FLOAT_REGS or none.

Register 60 used 2 times across 2 insns in block 2; set 1 time; FLOAT_REGS or none.

3 basic blocks, 2 edges.

Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 0.
Predecessors:  ENTRY (fallthru)
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Register 58 in 8.
;; Register 59 in 8.
;; Register 60 in 9.
(note 1 0 3 ("main.cpp") 49)

(note 3 1 5 2 NOTE_INSN_FUNCTION_BEG)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 5 3 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 5 7 2 ("main.cpp") 52)

(insn 7 6 8 2 main.cpp:52 (set (reg:SF 59 [ rot.12 ])
        (mem/c/i:SF (symbol_ref:SI ("rot") [flags 0x2] <var_decl 01FDCD10 rot>) [0 rot+0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 8 7 9 2 main.cpp:52 (set (reg:SF 60)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC8") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (expr_list:REG_EQUAL (const_double:SF -1610612736 [0xa0000000] 1.0e+1 [0x0.ap+4])
        (nil)))

(insn 9 8 10 2 main.cpp:52 (set (reg:SF 58 [ D.34478 ])
        (plus:SF (reg:SF 59 [ rot.12 ])
            (reg:SF 60))) 416 {*fop_sf_comm_i387} (nil)
    (expr_list:REG_DEAD (reg:SF 59 [ rot.12 ])
        (expr_list:REG_DEAD (reg:SF 60)
            (nil))))

(insn 10 9 11 2 main.cpp:52 (set (mem/c/i:SF (symbol_ref:SI ("rot") [flags 0x2] <var_decl 01FDCD10 rot>) [0 rot+0 S4 A32])
        (reg:SF 58 [ D.34478 ])) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 58 [ D.34478 ])
        (nil)))

(note 11 10 12 2 ("main.cpp") 53)

(call_insn 12 11 13 2 main.cpp:53 (call (mem:QI (symbol_ref:SI ("glutPostRedisplay@0") [flags 0x41] <function_decl 02041B60 glutPostRedisplay>) [0 S1 A8])
        (const_int 0 [0x0])) 385 {*call_0} (nil)
    (nil)
    (nil))

(note 13 12 14 2 ("main.cpp") 55)

(insn 14 13 15 2 main.cpp:55 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (const_int 0 [0x0])) 34 {*movsi_1} (nil)
    (nil))

(insn 15 14 16 2 main.cpp:55 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (symbol_ref:SI ("_Z9myTimeOuti") [flags 0x3] <function_decl 02059CB0 myTimeOut>)) 34 {*movsi_1} (nil)
    (nil))

(insn 16 15 17 2 main.cpp:55 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (const_int 100 [0x64])) 34 {*movsi_1} (nil)
    (nil))

(call_insn 17 16 18 2 main.cpp:55 (parallel [
            (call (mem:QI (symbol_ref:SI ("glutTimerFunc@12") [flags 0x41] <function_decl 02051000 glutTimerFunc>) [0 S1 A8])
                (const_int 12 [0xc]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 18 17 19 2 main.cpp:55 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 19 18 20 NOTE_INSN_FUNCTION_END)

(note 20 19 0 ("main.cpp") 56)


;; Function void resize(int, int) (_Z6resizeii)



Pass 0

  Register 58 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FLOAT_INT_REGS:18000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:18000 ALL_REGS:18000 MEM:8000
  Register 59 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FLOAT_INT_REGS:18000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:18000 ALL_REGS:18000 MEM:8000
  Register 60 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FLOAT_INT_REGS:18000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:18000 ALL_REGS:18000 MEM:8000
  Register 61 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FLOAT_INT_REGS:18000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:18000 ALL_REGS:18000 MEM:8000
  Register 62 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FLOAT_INT_REGS:18000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:18000 ALL_REGS:18000 MEM:8000

  Register 53 pref FLOAT_INT_SSE_REGS or none
  Register 54 pref FLOAT_INT_SSE_REGS or none
  Register 55 pref FLOAT_INT_SSE_REGS or none
  Register 56 pref FLOAT_INT_SSE_REGS or none
  Register 57 pref FLOAT_INT_SSE_REGS or none
  Register 58 pref GENERAL_REGS or none
  Register 59 pref GENERAL_REGS or none
  Register 60 pref GENERAL_REGS or none
  Register 61 pref GENERAL_REGS or none
  Register 62 pref GENERAL_REGS or none
63 registers.

Register 58 used 2 times across 2 insns in block 2; set 1 time; GENERAL_REGS or none.

Register 59 used 2 times across 2 insns in block 3; set 1 time; GENERAL_REGS or none.

Register 60 used 2 times across 2 insns in block 3; set 1 time; GENERAL_REGS or none.

Register 61 used 2 times across 2 insns in block 4; set 1 time; GENERAL_REGS or none.

Register 62 used 2 times across 2 insns in block 4; set 1 time; GENERAL_REGS or none.

6 basic blocks, 6 edges.

Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 0.
Predecessors:  ENTRY (fallthru)
Successors:  3 (fallthru) 4
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 0.
Predecessors:  2 (fallthru)
Successors:  5 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 0.
Predecessors:  2
Successors:  5 (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

Basic block 5 , prev 4, next 1, loop_depth 0, count 0, freq 0.
Predecessors:  4 (fallthru) 3 [100.0%] 
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Register 58 in 0.
;; Register 59 in 0.
;; Register 60 in 0.
;; Register 61 in 0.
;; Register 62 in 0.
(note 1 0 3 ("main.cpp") 42)

(note 3 1 5 2 NOTE_INSN_FUNCTION_BEG)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 5 3 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 5 7 2 ("main.cpp") 43)

(insn 7 6 8 2 main.cpp:43 (set (reg:SI 58 [ w ])
        (mem/c/i:SI (reg/f:SI 16 argp) [0 w+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 8 7 9 2 main.cpp:43 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 58 [ w ])
            (mem/c/i:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [0 h+0 S4 A32]))) 2 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 58 [ w ])
        (nil)))

(jump_insn 9 8 11 2 main.cpp:43 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 365 {*jcc_1} (nil)
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil)))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 11 9 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 12 11 13 3 ("main.cpp") 44)

(insn 13 12 14 3 main.cpp:44 (set (reg:SI 59 [ h ])
        (mem/c/i:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [0 h+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 14 13 15 3 main.cpp:44 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 59 [ h ])) 34 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 59 [ h ])
        (nil)))

(insn 15 14 16 3 main.cpp:44 (set (reg:SI 60 [ h ])
        (mem/c/i:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [0 h+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 16 15 17 3 main.cpp:44 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 60 [ h ])) 34 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 60 [ h ])
        (nil)))

(insn 17 16 18 3 main.cpp:44 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0x0])) 34 {*movsi_1} (nil)
    (nil))

(insn 18 17 19 3 main.cpp:44 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (const_int 0 [0x0])) 34 {*movsi_1} (nil)
    (nil))

(call_insn 19 18 20 3 main.cpp:44 (parallel [
            (call (mem:QI (symbol_ref:SI ("glViewport@16") [flags 0x41] <function_decl 0202ECB0 glViewport>) [0 S1 A8])
                (const_int 16 [0x10]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 20 19 21 3 main.cpp:44 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -16 [0xfffffff0])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 21 20 22 3 main.cpp:44 (set (pc)
        (label_ref:SI 41)) 380 {jump} (nil)
    (nil))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 22 21 23)

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 23 22 24 4 26 "" [1 uses])

(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 25 24 26 4 ("main.cpp") 46)

(insn 26 25 27 4 main.cpp:46 (set (reg:SI 61 [ w ])
        (mem/c/i:SI (reg/f:SI 16 argp) [0 w+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 27 26 28 4 main.cpp:46 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 61 [ w ])) 34 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 61 [ w ])
        (nil)))

(insn 28 27 29 4 main.cpp:46 (set (reg:SI 62 [ w ])
        (mem/c/i:SI (reg/f:SI 16 argp) [0 w+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 29 28 30 4 main.cpp:46 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 62 [ w ])) 34 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 62 [ w ])
        (nil)))

(insn 30 29 31 4 main.cpp:46 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0x0])) 34 {*movsi_1} (nil)
    (nil))

(insn 31 30 32 4 main.cpp:46 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (const_int 0 [0x0])) 34 {*movsi_1} (nil)
    (nil))

(call_insn 32 31 33 4 main.cpp:46 (parallel [
            (call (mem:QI (symbol_ref:SI ("glViewport@16") [flags 0x41] <function_decl 0202ECB0 glViewport>) [0 S1 A8])
                (const_int 16 [0x10]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 33 32 36 4 main.cpp:46 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -16 [0xfffffff0])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 36 33 37 NOTE_INSN_FUNCTION_END)

(note 37 36 41 ("main.cpp") 47)

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 41 37 44 5 29 "" [1 uses])

(note 44 41 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void myDisplay() (_Z9myDisplayv)



Pass 0

  Register 58 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 59 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 60 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 61 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 62 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 63 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 64 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 65 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 66 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 67 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 68 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 69 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 70 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 71 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 72 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 73 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 74 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 75 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 76 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 77 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 78 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 79 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 80 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 81 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 82 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 83 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 84 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 85 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 86 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 87 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 88 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 89 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 90 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 91 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 92 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 93 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 94 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 95 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 96 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 97 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 98 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 99 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 100 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 101 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 102 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 103 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 104 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 105 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 106 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 107 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 108 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 109 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 110 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 111 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000
  Register 112 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 FP_TOP_SSE_REGS:34000 FP_SECOND_SSE_REGS:34000 FLOAT_SSE_REGS:34000 FLOAT_INT_REGS:34000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:34000 ALL_REGS:34000 MEM:8000

  Register 53 pref FLOAT_INT_SSE_REGS or none
  Register 54 pref FLOAT_INT_SSE_REGS or none
  Register 55 pref FLOAT_INT_SSE_REGS or none
  Register 56 pref FLOAT_INT_SSE_REGS or none
  Register 57 pref FLOAT_INT_SSE_REGS or none
  Register 58 pref FLOAT_INT_REGS or none
  Register 59 pref FLOAT_INT_REGS or none
  Register 60 pref FLOAT_INT_REGS or none
  Register 61 pref FLOAT_INT_REGS or none
  Register 62 pref FLOAT_INT_REGS or none
  Register 63 pref FLOAT_INT_REGS or none
  Register 64 pref FLOAT_INT_REGS or none
  Register 65 pref FLOAT_INT_REGS or none
  Register 66 pref FLOAT_INT_REGS or none
  Register 67 pref FLOAT_INT_REGS or none
  Register 68 pref FLOAT_INT_REGS or none
  Register 69 pref FLOAT_INT_REGS or none
  Register 70 pref FLOAT_INT_REGS or none
  Register 71 pref FLOAT_INT_REGS or none
  Register 72 pref FLOAT_INT_REGS or none
  Register 73 pref FLOAT_INT_REGS or none
  Register 74 pref FLOAT_INT_REGS or none
  Register 75 pref FLOAT_INT_REGS or none
  Register 76 pref FLOAT_INT_REGS or none
  Register 77 pref FLOAT_INT_REGS or none
  Register 78 pref FLOAT_INT_REGS or none
  Register 79 pref FLOAT_INT_REGS or none
  Register 80 pref FLOAT_INT_REGS or none
  Register 81 pref FLOAT_INT_REGS or none
  Register 82 pref FLOAT_INT_REGS or none
  Register 83 pref FLOAT_INT_REGS or none
  Register 84 pref FLOAT_INT_REGS or none
  Register 85 pref FLOAT_INT_REGS or none
  Register 86 pref FLOAT_INT_REGS or none
  Register 87 pref FLOAT_INT_REGS or none
  Register 88 pref FLOAT_INT_REGS or none
  Register 89 pref FLOAT_INT_REGS or none
  Register 90 pref FLOAT_INT_REGS or none
  Register 91 pref FLOAT_INT_REGS or none
  Register 92 pref FLOAT_INT_REGS or none
  Register 93 pref FLOAT_INT_REGS or none
  Register 94 pref FLOAT_INT_REGS or none
  Register 95 pref FLOAT_INT_REGS or none
  Register 96 pref FLOAT_INT_REGS or none
  Register 97 pref FLOAT_INT_REGS or none
  Register 98 pref FLOAT_INT_REGS or none
  Register 99 pref FLOAT_INT_REGS or none
  Register 100 pref FLOAT_INT_REGS or none
  Register 101 pref FLOAT_INT_REGS or none
  Register 102 pref FLOAT_INT_REGS or none
  Register 103 pref FLOAT_INT_REGS or none
  Register 104 pref FLOAT_INT_REGS or none
  Register 105 pref FLOAT_INT_REGS or none
  Register 106 pref FLOAT_INT_REGS or none
  Register 107 pref FLOAT_INT_REGS or none
  Register 108 pref FLOAT_INT_REGS or none
  Register 109 pref FLOAT_INT_REGS or none
  Register 110 pref FLOAT_INT_REGS or none
  Register 111 pref FLOAT_INT_REGS or none
  Register 112 pref FLOAT_INT_REGS or none
113 registers.

Register 58 used 2 times across 5 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 59 used 2 times across 5 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 60 used 2 times across 5 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 61 used 2 times across 5 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 62 used 2 times across 4 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 63 used 2 times across 4 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 64 used 2 times across 4 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 65 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 66 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 67 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 68 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 69 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 70 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 71 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 72 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 73 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 74 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 75 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 76 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 77 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 78 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 79 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 80 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 81 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 82 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 83 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 84 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 85 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 86 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 87 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 88 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 89 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 90 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 91 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 92 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 93 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 94 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 95 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 96 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 97 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 98 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 99 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 100 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 101 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 102 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 103 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 104 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 105 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 106 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 107 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 108 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 109 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 110 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 111 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

Register 112 used 2 times across 2 insns in block 2; set 1 time; FLOAT_INT_REGS or none.

3 basic blocks, 2 edges.

Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 0.
Predecessors:  ENTRY (fallthru)
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Register 58 in 3.
;; Register 59 in 2.
;; Register 60 in 1.
;; Register 61 in 0.
;; Register 62 in 2.
;; Register 63 in 1.
;; Register 64 in 0.
;; Register 65 in 0.
;; Register 66 in 0.
;; Register 67 in 0.
;; Register 68 in 0.
;; Register 69 in 0.
;; Register 70 in 0.
;; Register 71 in 0.
;; Register 72 in 0.
;; Register 73 in 0.
;; Register 74 in 0.
;; Register 75 in 0.
;; Register 76 in 0.
;; Register 77 in 0.
;; Register 78 in 0.
;; Register 79 in 0.
;; Register 80 in 0.
;; Register 81 in 0.
;; Register 82 in 0.
;; Register 83 in 0.
;; Register 84 in 0.
;; Register 85 in 0.
;; Register 86 in 0.
;; Register 87 in 0.
;; Register 88 in 0.
;; Register 89 in 0.
;; Register 90 in 0.
;; Register 91 in 0.
;; Register 92 in 0.
;; Register 93 in 0.
;; Register 94 in 0.
;; Register 95 in 0.
;; Register 96 in 0.
;; Register 97 in 0.
;; Register 98 in 0.
;; Register 99 in 0.
;; Register 100 in 0.
;; Register 101 in 0.
;; Register 102 in 0.
;; Register 103 in 0.
;; Register 104 in 0.
;; Register 105 in 0.
;; Register 106 in 0.
;; Register 107 in 0.
;; Register 108 in 0.
;; Register 109 in 0.
;; Register 110 in 0.
;; Register 111 in 0.
;; Register 112 in 0.
(note 1 0 3 ("main.cpp") 13)

(note 3 1 5 2 NOTE_INSN_FUNCTION_BEG)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 5 3 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 5 7 2 ("main.cpp") 14)

(insn 7 6 8 2 main.cpp:14 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (const_int 16384 [0x4000])) 34 {*movsi_1} (nil)
    (nil))

(call_insn 8 7 9 2 main.cpp:14 (parallel [
            (call (mem:QI (symbol_ref:SI ("glClear@4") [flags 0x41] <function_decl 01FF6C40 glClear>) [0 S1 A8])
                (const_int 4 [0x4]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 9 8 10 2 main.cpp:14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 10 9 11 2 ("main.cpp") 15)

(call_insn 11 10 12 2 main.cpp:15 (call (mem:QI (symbol_ref:SI ("glLoadIdentity@0") [flags 0x41] <function_decl 0200ED90 glLoadIdentity>) [0 S1 A8])
        (const_int 0 [0x0])) 385 {*call_0} (nil)
    (nil)
    (nil))

(note 12 11 13 2 ("main.cpp") 16)

(insn 13 12 14 2 main.cpp:16 (set (reg:SF 64 [ z_pos.5 ])
        (mem/c/i:SF (symbol_ref:SI ("z_pos") [flags 0x2] <var_decl 01FDCC08 z_pos>) [0 z_pos+0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 14 13 15 2 main.cpp:16 (set (reg:SF 63 [ y_pos.6 ])
        (mem/c/i:SF (symbol_ref:SI ("y_pos") [flags 0x2] <var_decl 01FDCC60 y_pos>) [0 y_pos+0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 15 14 16 2 main.cpp:16 (set (reg:SF 62 [ x_pos.7 ])
        (mem/c/i:SF (symbol_ref:SI ("x_pos") [flags 0x2] <var_decl 01FDCCB8 x_pos>) [0 x_pos+0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 16 15 17 2 main.cpp:16 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SF 64 [ z_pos.5 ])) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 64 [ z_pos.5 ])
        (nil)))

(insn 17 16 18 2 main.cpp:16 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SF 63 [ y_pos.6 ])) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 63 [ y_pos.6 ])
        (nil)))

(insn 18 17 19 2 main.cpp:16 (set (mem:SF (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SF 62 [ x_pos.7 ])) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 62 [ x_pos.7 ])
        (nil)))

(call_insn 19 18 20 2 main.cpp:16 (parallel [
            (call (mem:QI (symbol_ref:SI ("glTranslatef@12") [flags 0x41] <function_decl 0202E150 glTranslatef>) [0 S1 A8])
                (const_int 12 [0xc]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 20 19 21 2 main.cpp:16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 21 20 22 2 ("main.cpp") 17)

(insn 22 21 23 2 main.cpp:17 (set (reg:SF 61 [ z_pos.8 ])
        (mem/c/i:SF (symbol_ref:SI ("z_pos") [flags 0x2] <var_decl 01FDCC08 z_pos>) [0 z_pos+0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 23 22 24 2 main.cpp:17 (set (reg:SF 60 [ y_pos.9 ])
        (mem/c/i:SF (symbol_ref:SI ("y_pos") [flags 0x2] <var_decl 01FDCC60 y_pos>) [0 y_pos+0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 24 23 25 2 main.cpp:17 (set (reg:SF 59 [ x_pos.10 ])
        (mem/c/i:SF (symbol_ref:SI ("x_pos") [flags 0x2] <var_decl 01FDCCB8 x_pos>) [0 x_pos+0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 25 24 26 2 main.cpp:17 (set (reg:SF 58 [ rot.11 ])
        (mem/c/i:SF (symbol_ref:SI ("rot") [flags 0x2] <var_decl 01FDCD10 rot>) [0 rot+0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 26 25 27 2 main.cpp:17 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SF 61 [ z_pos.8 ])) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 61 [ z_pos.8 ])
        (nil)))

(insn 27 26 28 2 main.cpp:17 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SF 60 [ y_pos.9 ])) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 60 [ y_pos.9 ])
        (nil)))

(insn 28 27 29 2 main.cpp:17 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SF 59 [ x_pos.10 ])) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 59 [ x_pos.10 ])
        (nil)))

(insn 29 28 30 2 main.cpp:17 (set (mem:SF (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SF 58 [ rot.11 ])) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 58 [ rot.11 ])
        (nil)))

(call_insn 30 29 31 2 main.cpp:17 (parallel [
            (call (mem:QI (symbol_ref:SI ("glRotatef@16") [flags 0x41] <function_decl 02022620 glRotatef>) [0 S1 A8])
                (const_int 16 [0x10]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 31 30 32 2 main.cpp:17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -16 [0xfffffff0])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 32 31 33 2 ("main.cpp") 19)

(insn 33 32 34 2 main.cpp:19 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (const_int 9 [0x9])) 34 {*movsi_1} (nil)
    (nil))

(call_insn 34 33 35 2 main.cpp:19 (parallel [
            (call (mem:QI (symbol_ref:SI ("glBegin@4") [flags 0x41] <function_decl 01FF69A0 glBegin>) [0 S1 A8])
                (const_int 4 [0x4]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 35 34 36 2 main.cpp:19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 36 35 37 2 ("main.cpp") 20)

(insn 37 36 38 2 main.cpp:20 (set (reg:SF 65)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC3") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 38 37 39 2 main.cpp:20 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SF 65)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 65)
        (nil)))

(insn 39 38 40 2 main.cpp:20 (set (reg:SF 66)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC2") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 40 39 41 2 main.cpp:20 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SF 66)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 66)
        (nil)))

(insn 41 40 42 2 main.cpp:20 (set (reg:SF 67)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC3") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 42 41 43 2 main.cpp:20 (set (mem:SF (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SF 67)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 67)
        (nil)))

(call_insn 43 42 44 2 main.cpp:20 (parallel [
            (call (mem:QI (symbol_ref:SI ("glColor3f@12") [flags 0x41] <function_decl 01FFB150 glColor3f>) [0 S1 A8])
                (const_int 12 [0xc]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 44 43 45 2 main.cpp:20 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 45 44 46 2 ("main.cpp") 21)

(insn 46 45 47 2 main.cpp:21 (set (reg:SF 68)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC9") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 47 46 48 2 main.cpp:21 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SF 68)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 68)
        (nil)))

(insn 48 47 49 2 main.cpp:21 (set (reg:SF 69)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC10") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 49 48 50 2 main.cpp:21 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SF 69)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 69)
        (nil)))

(insn 50 49 51 2 main.cpp:21 (set (reg:SF 70)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC10") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 51 50 52 2 main.cpp:21 (set (mem:SF (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SF 70)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 70)
        (nil)))

(call_insn 52 51 53 2 main.cpp:21 (parallel [
            (call (mem:QI (symbol_ref:SI ("glVertex3f@12") [flags 0x41] <function_decl 0202E620 glVertex3f>) [0 S1 A8])
                (const_int 12 [0xc]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 53 52 54 2 main.cpp:21 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 54 53 55 2 ("main.cpp") 22)

(insn 55 54 56 2 main.cpp:22 (set (reg:SF 71)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC2") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 56 55 57 2 main.cpp:22 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SF 71)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 71)
        (nil)))

(insn 57 56 58 2 main.cpp:22 (set (reg:SF 72)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC3") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 58 57 59 2 main.cpp:22 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SF 72)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 72)
        (nil)))

(insn 59 58 60 2 main.cpp:22 (set (reg:SF 73)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC3") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 60 59 61 2 main.cpp:22 (set (mem:SF (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SF 73)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 73)
        (nil)))

(call_insn 61 60 62 2 main.cpp:22 (parallel [
            (call (mem:QI (symbol_ref:SI ("glColor3f@12") [flags 0x41] <function_decl 01FFB150 glColor3f>) [0 S1 A8])
                (const_int 12 [0xc]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 62 61 63 2 main.cpp:22 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 63 62 64 2 ("main.cpp") 23)

(insn 64 63 65 2 main.cpp:23 (set (reg:SF 74)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC9") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 65 64 66 2 main.cpp:23 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SF 74)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 74)
        (nil)))

(insn 66 65 67 2 main.cpp:23 (set (reg:SF 75)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC3") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 67 66 68 2 main.cpp:23 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SF 75)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 75)
        (nil)))

(insn 68 67 69 2 main.cpp:23 (set (reg:SF 76)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC11") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 69 68 70 2 main.cpp:23 (set (mem:SF (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SF 76)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 76)
        (nil)))

(call_insn 70 69 71 2 main.cpp:23 (parallel [
            (call (mem:QI (symbol_ref:SI ("glVertex3f@12") [flags 0x41] <function_decl 0202E620 glVertex3f>) [0 S1 A8])
                (const_int 12 [0xc]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 71 70 72 2 main.cpp:23 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 72 71 73 2 ("main.cpp") 24)

(insn 73 72 74 2 main.cpp:24 (set (reg:SF 77)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC3") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 74 73 75 2 main.cpp:24 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SF 77)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 77)
        (nil)))

(insn 75 74 76 2 main.cpp:24 (set (reg:SF 78)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC3") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 76 75 77 2 main.cpp:24 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SF 78)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 78)
        (nil)))

(insn 77 76 78 2 main.cpp:24 (set (reg:SF 79)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC2") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 78 77 79 2 main.cpp:24 (set (mem:SF (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SF 79)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 79)
        (nil)))

(call_insn 79 78 80 2 main.cpp:24 (parallel [
            (call (mem:QI (symbol_ref:SI ("glColor3f@12") [flags 0x41] <function_decl 01FFB150 glColor3f>) [0 S1 A8])
                (const_int 12 [0xc]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 80 79 81 2 main.cpp:24 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 81 80 82 2 ("main.cpp") 25)

(insn 82 81 83 2 main.cpp:25 (set (reg:SF 80)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC9") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 83 82 84 2 main.cpp:25 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SF 80)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 80)
        (nil)))

(insn 84 83 85 2 main.cpp:25 (set (reg:SF 81)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC12") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 85 84 86 2 main.cpp:25 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SF 81)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 81)
        (nil)))

(insn 86 85 87 2 main.cpp:25 (set (reg:SF 82)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC10") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 87 86 88 2 main.cpp:25 (set (mem:SF (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SF 82)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 82)
        (nil)))

(call_insn 88 87 89 2 main.cpp:25 (parallel [
            (call (mem:QI (symbol_ref:SI ("glVertex3f@12") [flags 0x41] <function_decl 0202E620 glVertex3f>) [0 S1 A8])
                (const_int 12 [0xc]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 89 88 90 2 main.cpp:25 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 90 89 91 2 ("main.cpp") 26)

(insn 91 90 92 2 main.cpp:26 (set (reg:SF 83)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC3") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 92 91 93 2 main.cpp:26 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SF 83)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 83)
        (nil)))

(insn 93 92 94 2 main.cpp:26 (set (reg:SF 84)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC2") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 94 93 95 2 main.cpp:26 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SF 84)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 84)
        (nil)))

(insn 95 94 96 2 main.cpp:26 (set (reg:SF 85)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC3") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 96 95 97 2 main.cpp:26 (set (mem:SF (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SF 85)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 85)
        (nil)))

(call_insn 97 96 98 2 main.cpp:26 (parallel [
            (call (mem:QI (symbol_ref:SI ("glColor3f@12") [flags 0x41] <function_decl 01FFB150 glColor3f>) [0 S1 A8])
                (const_int 12 [0xc]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 98 97 99 2 main.cpp:26 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 99 98 100 2 ("main.cpp") 27)

(insn 100 99 101 2 main.cpp:27 (set (reg:SF 86)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC9") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 101 100 102 2 main.cpp:27 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SF 86)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 86)
        (nil)))

(insn 102 101 103 2 main.cpp:27 (set (reg:SF 87)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC13") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 103 102 104 2 main.cpp:27 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SF 87)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 87)
        (nil)))

(insn 104 103 105 2 main.cpp:27 (set (reg:SF 88)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC3") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 105 104 106 2 main.cpp:27 (set (mem:SF (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SF 88)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 88)
        (nil)))

(call_insn 106 105 107 2 main.cpp:27 (parallel [
            (call (mem:QI (symbol_ref:SI ("glVertex3f@12") [flags 0x41] <function_decl 0202E620 glVertex3f>) [0 S1 A8])
                (const_int 12 [0xc]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 107 106 108 2 main.cpp:27 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 108 107 109 2 ("main.cpp") 28)

(insn 109 108 110 2 main.cpp:28 (set (reg:SF 89)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC2") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 110 109 111 2 main.cpp:28 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SF 89)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 89)
        (nil)))

(insn 111 110 112 2 main.cpp:28 (set (reg:SF 90)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC3") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 112 111 113 2 main.cpp:28 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SF 90)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 90)
        (nil)))

(insn 113 112 114 2 main.cpp:28 (set (reg:SF 91)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC3") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 114 113 115 2 main.cpp:28 (set (mem:SF (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SF 91)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 91)
        (nil)))

(call_insn 115 114 116 2 main.cpp:28 (parallel [
            (call (mem:QI (symbol_ref:SI ("glColor3f@12") [flags 0x41] <function_decl 01FFB150 glColor3f>) [0 S1 A8])
                (const_int 12 [0xc]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 116 115 117 2 main.cpp:28 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 117 116 118 2 ("main.cpp") 29)

(insn 118 117 119 2 main.cpp:29 (set (reg:SF 92)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC9") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 119 118 120 2 main.cpp:29 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SF 92)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 92)
        (nil)))

(insn 120 119 121 2 main.cpp:29 (set (reg:SF 93)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC12") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 121 120 122 2 main.cpp:29 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SF 93)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 93)
        (nil)))

(insn 122 121 123 2 main.cpp:29 (set (reg:SF 94)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC12") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 123 122 124 2 main.cpp:29 (set (mem:SF (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SF 94)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 94)
        (nil)))

(call_insn 124 123 125 2 main.cpp:29 (parallel [
            (call (mem:QI (symbol_ref:SI ("glVertex3f@12") [flags 0x41] <function_decl 0202E620 glVertex3f>) [0 S1 A8])
                (const_int 12 [0xc]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 125 124 126 2 main.cpp:29 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 126 125 127 2 ("main.cpp") 30)

(insn 127 126 128 2 main.cpp:30 (set (reg:SF 95)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC3") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 128 127 129 2 main.cpp:30 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SF 95)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 95)
        (nil)))

(insn 129 128 130 2 main.cpp:30 (set (reg:SF 96)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC3") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 130 129 131 2 main.cpp:30 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SF 96)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 96)
        (nil)))

(insn 131 130 132 2 main.cpp:30 (set (reg:SF 97)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC2") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 132 131 133 2 main.cpp:30 (set (mem:SF (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SF 97)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 97)
        (nil)))

(call_insn 133 132 134 2 main.cpp:30 (parallel [
            (call (mem:QI (symbol_ref:SI ("glColor3f@12") [flags 0x41] <function_decl 01FFB150 glColor3f>) [0 S1 A8])
                (const_int 12 [0xc]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 134 133 135 2 main.cpp:30 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 135 134 136 2 ("main.cpp") 31)

(insn 136 135 137 2 main.cpp:31 (set (reg:SF 98)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC9") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 137 136 138 2 main.cpp:31 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SF 98)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 98)
        (nil)))

(insn 138 137 139 2 main.cpp:31 (set (reg:SF 99)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC3") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 139 138 140 2 main.cpp:31 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SF 99)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 99)
        (nil)))

(insn 140 139 141 2 main.cpp:31 (set (reg:SF 100)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC13") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 141 140 142 2 main.cpp:31 (set (mem:SF (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SF 100)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 100)
        (nil)))

(call_insn 142 141 143 2 main.cpp:31 (parallel [
            (call (mem:QI (symbol_ref:SI ("glVertex3f@12") [flags 0x41] <function_decl 0202E620 glVertex3f>) [0 S1 A8])
                (const_int 12 [0xc]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 143 142 144 2 main.cpp:31 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 144 143 145 2 ("main.cpp") 32)

(insn 145 144 146 2 main.cpp:32 (set (reg:SF 101)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC3") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 146 145 147 2 main.cpp:32 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SF 101)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 101)
        (nil)))

(insn 147 146 148 2 main.cpp:32 (set (reg:SF 102)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC2") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 148 147 149 2 main.cpp:32 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SF 102)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 102)
        (nil)))

(insn 149 148 150 2 main.cpp:32 (set (reg:SF 103)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC3") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 150 149 151 2 main.cpp:32 (set (mem:SF (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SF 103)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 103)
        (nil)))

(call_insn 151 150 152 2 main.cpp:32 (parallel [
            (call (mem:QI (symbol_ref:SI ("glColor3f@12") [flags 0x41] <function_decl 01FFB150 glColor3f>) [0 S1 A8])
                (const_int 12 [0xc]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 152 151 153 2 main.cpp:32 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 153 152 154 2 ("main.cpp") 33)

(insn 154 153 155 2 main.cpp:33 (set (reg:SF 104)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC9") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 155 154 156 2 main.cpp:33 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SF 104)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 104)
        (nil)))

(insn 156 155 157 2 main.cpp:33 (set (reg:SF 105)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC10") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 157 156 158 2 main.cpp:33 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SF 105)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 105)
        (nil)))

(insn 158 157 159 2 main.cpp:33 (set (reg:SF 106)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC12") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 159 158 160 2 main.cpp:33 (set (mem:SF (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SF 106)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 106)
        (nil)))

(call_insn 160 159 161 2 main.cpp:33 (parallel [
            (call (mem:QI (symbol_ref:SI ("glVertex3f@12") [flags 0x41] <function_decl 0202E620 glVertex3f>) [0 S1 A8])
                (const_int 12 [0xc]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 161 160 162 2 main.cpp:33 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 162 161 163 2 ("main.cpp") 34)

(insn 163 162 164 2 main.cpp:34 (set (reg:SF 107)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC2") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 164 163 165 2 main.cpp:34 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SF 107)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 107)
        (nil)))

(insn 165 164 166 2 main.cpp:34 (set (reg:SF 108)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC3") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 166 165 167 2 main.cpp:34 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SF 108)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 108)
        (nil)))

(insn 167 166 168 2 main.cpp:34 (set (reg:SF 109)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC3") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 168 167 169 2 main.cpp:34 (set (mem:SF (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SF 109)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 109)
        (nil)))

(call_insn 169 168 170 2 main.cpp:34 (parallel [
            (call (mem:QI (symbol_ref:SI ("glColor3f@12") [flags 0x41] <function_decl 01FFB150 glColor3f>) [0 S1 A8])
                (const_int 12 [0xc]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 170 169 171 2 main.cpp:34 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 171 170 172 2 ("main.cpp") 35)

(insn 172 171 173 2 main.cpp:35 (set (reg:SF 110)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC9") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 173 172 174 2 main.cpp:35 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SF 110)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 110)
        (nil)))

(insn 174 173 175 2 main.cpp:35 (set (reg:SF 111)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC11") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 175 174 176 2 main.cpp:35 (set (mem:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SF 111)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 111)
        (nil)))

(insn 176 175 177 2 main.cpp:35 (set (reg:SF 112)
        (mem/u/c/i:SF (symbol_ref/u:SI ("*LC3") [flags 0x2]) [0 S4 A32])) 59 {*movsf_1} (nil)
    (nil))

(insn 177 176 178 2 main.cpp:35 (set (mem:SF (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SF 112)) 59 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg:SF 112)
        (nil)))

(call_insn 178 177 179 2 main.cpp:35 (parallel [
            (call (mem:QI (symbol_ref:SI ("glVertex3f@12") [flags 0x41] <function_decl 0202E620 glVertex3f>) [0 S1 A8])
                (const_int 12 [0xc]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 179 178 180 2 main.cpp:35 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 180 179 181 2 ("main.cpp") 36)

(call_insn 181 180 182 2 main.cpp:36 (call (mem:QI (symbol_ref:SI ("glEnd@0") [flags 0x41] <function_decl 020038C0 glEnd>) [0 S1 A8])
        (const_int 0 [0x0])) 385 {*call_0} (nil)
    (nil)
    (nil))

(note 182 181 183 2 ("main.cpp") 38)

(call_insn 183 182 184 2 main.cpp:38 (call (mem:QI (symbol_ref:SI ("glFlush@0") [flags 0x41] <function_decl 02009000 glFlush>) [0 S1 A8])
        (const_int 0 [0x0])) 385 {*call_0} (nil)
    (nil)
    (nil))

(note 184 183 185 2 ("main.cpp") 39)

(call_insn 185 184 186 2 main.cpp:39 (call (mem:QI (symbol_ref:SI ("glutSwapBuffers@0") [flags 0x41] <function_decl 02041C40 glutSwapBuffers>) [0 S1 A8])
        (const_int 0 [0x0])) 385 {*call_0} (nil)
    (nil)
    (nil))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 186 185 187 NOTE_INSN_FUNCTION_END)

(note 187 186 0 ("main.cpp") 40)


;; Function int glutCreateMenu_ATEXIT_HACK(void (*)(int)) (glutCreateMenu_ATEXIT_HACK)



Pass 0

  Register 58 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FLOAT_INT_REGS:18000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:18000 ALL_REGS:18000 MEM:7000
  Register 59 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FLOAT_INT_REGS:18000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:18000 ALL_REGS:18000 MEM:7000
  Register 60 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FLOAT_INT_REGS:18000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:18000 ALL_REGS:18000 MEM:7000
  Register 61 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FLOAT_INT_REGS:18000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:18000 ALL_REGS:18000 MEM:8000

  Register 53 pref FLOAT_INT_SSE_REGS or none
  Register 54 pref FLOAT_INT_SSE_REGS or none
  Register 55 pref FLOAT_INT_SSE_REGS or none
  Register 56 pref FLOAT_INT_SSE_REGS or none
  Register 57 pref FLOAT_INT_SSE_REGS or none
  Register 58 pref AREG, else GENERAL_REGS
  Register 59 pref GENERAL_REGS or none
  Register 60 pref AREG, else GENERAL_REGS
  Register 61 pref GENERAL_REGS or none
  Register 62 pref FLOAT_INT_SSE_REGS or none
63 registers.

Register 58 used 2 times across 2 insns in block 2; set 1 time; pref AREG, else GENERAL_REGS.

Register 59 used 2 times across 2 insns in block 2; set 1 time; GENERAL_REGS or none.

Register 60 used 2 times across 2 insns in block 2; set 1 time; pref AREG, else GENERAL_REGS.

Register 61 used 2 times across 2 insns in block 2; set 1 time; GENERAL_REGS or none; pointer.

3 basic blocks, 2 edges.

Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 0.
Predecessors:  ENTRY (fallthru)
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Register 58 in 0.
;; Register 59 in 0.
;; Register 60 in 0.
;; Register 61 in 0.
(note 1 0 3 ("c:/mingw2/bin/../lib/gcc/i686-pc-mingw32/4.2.5/../../../../include/GL/glut.h") 549)

(note 3 1 5 2 NOTE_INSN_FUNCTION_BEG)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 5 3 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 5 7 2 ("c:/mingw2/bin/../lib/gcc/i686-pc-mingw32/4.2.5/../../../../include/GL/glut.h") 549)

(insn 7 6 8 2 c:/mingw2/bin/../lib/gcc/i686-pc-mingw32/4.2.5/../../../../include/GL/glut.h:549 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (symbol_ref:SI ("exit") [flags 0x41] <function_decl 00B78F50 exit>)) 34 {*movsi_1} (nil)
    (nil))

(insn 8 7 9 2 c:/mingw2/bin/../lib/gcc/i686-pc-mingw32/4.2.5/../../../../include/GL/glut.h:549 (set (reg/f:SI 61 [ func ])
        (mem/c/i:SI (reg/f:SI 16 argp) [0 func+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 9 8 10 2 c:/mingw2/bin/../lib/gcc/i686-pc-mingw32/4.2.5/../../../../include/GL/glut.h:549 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 61 [ func ])) 34 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/f:SI 61 [ func ])
        (nil)))

(call_insn 10 9 11 2 c:/mingw2/bin/../lib/gcc/i686-pc-mingw32/4.2.5/../../../../include/GL/glut.h:549 (parallel [
            (set (reg:SI 0 ax)
                (call (mem:QI (symbol_ref:SI ("__glutCreateMenuWithExit@8") [flags 0x41] <function_decl 0204A620 __glutCreateMenuWithExit>) [0 S1 A8])
                    (const_int 8 [0x8])))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
        ]) 548 {*call_value_pop_0} (nil)
    (nil)
    (nil))

(insn 11 10 12 2 c:/mingw2/bin/../lib/gcc/i686-pc-mingw32/4.2.5/../../../../include/GL/glut.h:549 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffff8])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 12 11 13 2 c:/mingw2/bin/../lib/gcc/i686-pc-mingw32/4.2.5/../../../../include/GL/glut.h:549 (set (reg:SI 58 [ D.34219 ])
        (reg:SI 0 ax)) 34 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn 13 12 14 2 c:/mingw2/bin/../lib/gcc/i686-pc-mingw32/4.2.5/../../../../include/GL/glut.h:549 (set (reg:SI 59 [ D.34218 ])
        (reg:SI 58 [ D.34219 ])) 34 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 58 [ D.34219 ])
        (nil)))

(insn 14 13 17 2 c:/mingw2/bin/../lib/gcc/i686-pc-mingw32/4.2.5/../../../../include/GL/glut.h:549 (set (reg:SI 60 [ <result> ])
        (reg:SI 59 [ D.34218 ])) 34 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 59 [ D.34218 ])
        (nil)))

(note 17 14 20 2 NOTE_INSN_FUNCTION_END)

(insn 20 17 26 2 c:/mingw2/bin/../lib/gcc/i686-pc-mingw32/4.2.5/../../../../include/GL/glut.h:549 (set (reg/i:SI 0 ax [ <result> ])
        (reg:SI 60 [ <result> ])) 34 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 60 [ <result> ])
        (nil)))

(insn 26 20 0 2 c:/mingw2/bin/../lib/gcc/i686-pc-mingw32/4.2.5/../../../../include/GL/glut.h:549 (use (reg/i:SI 0 ax [ <result> ])) -1 (nil)
    (nil))
;; End of basic block 2, registers live:
 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int glutCreateWindow_ATEXIT_HACK(const char*) (glutCreateWindow_ATEXIT_HACK)



Pass 0

  Register 58 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FLOAT_INT_REGS:18000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:18000 ALL_REGS:18000 MEM:7000
  Register 59 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FLOAT_INT_REGS:18000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:18000 ALL_REGS:18000 MEM:7000
  Register 60 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FLOAT_INT_REGS:18000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:18000 ALL_REGS:18000 MEM:7000
  Register 61 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FLOAT_INT_REGS:18000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:18000 ALL_REGS:18000 MEM:8000

  Register 53 pref FLOAT_INT_SSE_REGS or none
  Register 54 pref FLOAT_INT_SSE_REGS or none
  Register 55 pref FLOAT_INT_SSE_REGS or none
  Register 56 pref FLOAT_INT_SSE_REGS or none
  Register 57 pref FLOAT_INT_SSE_REGS or none
  Register 58 pref AREG, else GENERAL_REGS
  Register 59 pref GENERAL_REGS or none
  Register 60 pref AREG, else GENERAL_REGS
  Register 61 pref GENERAL_REGS or none
  Register 62 pref FLOAT_INT_SSE_REGS or none
63 registers.

Register 58 used 2 times across 2 insns in block 2; set 1 time; pref AREG, else GENERAL_REGS.

Register 59 used 2 times across 2 insns in block 2; set 1 time; GENERAL_REGS or none.

Register 60 used 2 times across 2 insns in block 2; set 1 time; pref AREG, else GENERAL_REGS.

Register 61 used 2 times across 2 insns in block 2; set 1 time; GENERAL_REGS or none; pointer.

3 basic blocks, 2 edges.

Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 0.
Predecessors:  ENTRY (fallthru)
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Register 58 in 0.
;; Register 59 in 0.
;; Register 60 in 0.
;; Register 61 in 0.
(note 1 0 3 ("c:/mingw2/bin/../lib/gcc/i686-pc-mingw32/4.2.5/../../../../include/GL/glut.h") 503)

(note 3 1 5 2 NOTE_INSN_FUNCTION_BEG)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 5 3 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 5 7 2 ("c:/mingw2/bin/../lib/gcc/i686-pc-mingw32/4.2.5/../../../../include/GL/glut.h") 503)

(insn 7 6 8 2 c:/mingw2/bin/../lib/gcc/i686-pc-mingw32/4.2.5/../../../../include/GL/glut.h:503 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (symbol_ref:SI ("exit") [flags 0x41] <function_decl 00B78F50 exit>)) 34 {*movsi_1} (nil)
    (nil))

(insn 8 7 9 2 c:/mingw2/bin/../lib/gcc/i686-pc-mingw32/4.2.5/../../../../include/GL/glut.h:503 (set (reg/f:SI 61 [ title ])
        (mem/c/i:SI (reg/f:SI 16 argp) [0 title+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 9 8 10 2 c:/mingw2/bin/../lib/gcc/i686-pc-mingw32/4.2.5/../../../../include/GL/glut.h:503 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 61 [ title ])) 34 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/f:SI 61 [ title ])
        (nil)))

(call_insn 10 9 11 2 c:/mingw2/bin/../lib/gcc/i686-pc-mingw32/4.2.5/../../../../include/GL/glut.h:503 (parallel [
            (set (reg:SI 0 ax)
                (call (mem:QI (symbol_ref:SI ("__glutCreateWindowWithExit@8") [flags 0x41] <function_decl 02041930 __glutCreateWindowWithExit>) [0 S1 A8])
                    (const_int 8 [0x8])))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
        ]) 548 {*call_value_pop_0} (nil)
    (nil)
    (nil))

(insn 11 10 12 2 c:/mingw2/bin/../lib/gcc/i686-pc-mingw32/4.2.5/../../../../include/GL/glut.h:503 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffff8])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 12 11 13 2 c:/mingw2/bin/../lib/gcc/i686-pc-mingw32/4.2.5/../../../../include/GL/glut.h:503 (set (reg:SI 58 [ D.34160 ])
        (reg:SI 0 ax)) 34 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn 13 12 14 2 c:/mingw2/bin/../lib/gcc/i686-pc-mingw32/4.2.5/../../../../include/GL/glut.h:503 (set (reg:SI 59 [ D.34159 ])
        (reg:SI 58 [ D.34160 ])) 34 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 58 [ D.34160 ])
        (nil)))

(insn 14 13 17 2 c:/mingw2/bin/../lib/gcc/i686-pc-mingw32/4.2.5/../../../../include/GL/glut.h:503 (set (reg:SI 60 [ <result> ])
        (reg:SI 59 [ D.34159 ])) 34 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 59 [ D.34159 ])
        (nil)))

(note 17 14 20 2 NOTE_INSN_FUNCTION_END)

(insn 20 17 26 2 c:/mingw2/bin/../lib/gcc/i686-pc-mingw32/4.2.5/../../../../include/GL/glut.h:503 (set (reg/i:SI 0 ax [ <result> ])
        (reg:SI 60 [ <result> ])) 34 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 60 [ <result> ])
        (nil)))

(insn 26 20 0 2 c:/mingw2/bin/../lib/gcc/i686-pc-mingw32/4.2.5/../../../../include/GL/glut.h:503 (use (reg/i:SI 0 ax [ <result> ])) -1 (nil)
    (nil))
;; End of basic block 2, registers live:
 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void glutInit_ATEXIT_HACK(int*, char**) (glutInit_ATEXIT_HACK)



Pass 0

  Register 58 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FLOAT_INT_REGS:18000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:18000 ALL_REGS:18000 MEM:8000
  Register 59 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FLOAT_INT_REGS:18000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:18000 ALL_REGS:18000 MEM:8000

  Register 53 pref FLOAT_INT_SSE_REGS or none
  Register 54 pref FLOAT_INT_SSE_REGS or none
  Register 55 pref FLOAT_INT_SSE_REGS or none
  Register 56 pref FLOAT_INT_SSE_REGS or none
  Register 57 pref FLOAT_INT_SSE_REGS or none
  Register 58 pref GENERAL_REGS or none
  Register 59 pref GENERAL_REGS or none
60 registers.

Register 58 used 2 times across 2 insns in block 2; set 1 time; GENERAL_REGS or none; pointer.

Register 59 used 2 times across 2 insns in block 2; set 1 time; GENERAL_REGS or none; pointer.

3 basic blocks, 2 edges.

Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 0.
Predecessors:  ENTRY (fallthru)
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Register 58 in 0.
;; Register 59 in 0.
(note 1 0 3 ("c:/mingw2/bin/../lib/gcc/i686-pc-mingw32/4.2.5/../../../../include/GL/glut.h") 486)

(note 3 1 5 2 NOTE_INSN_FUNCTION_BEG)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 5 3 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 5 7 2 ("c:/mingw2/bin/../lib/gcc/i686-pc-mingw32/4.2.5/../../../../include/GL/glut.h") 486)

(insn 7 6 8 2 c:/mingw2/bin/../lib/gcc/i686-pc-mingw32/4.2.5/../../../../include/GL/glut.h:486 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (symbol_ref:SI ("exit") [flags 0x41] <function_decl 00B78F50 exit>)) 34 {*movsi_1} (nil)
    (nil))

(insn 8 7 9 2 c:/mingw2/bin/../lib/gcc/i686-pc-mingw32/4.2.5/../../../../include/GL/glut.h:486 (set (reg/f:SI 58 [ argv ])
        (mem/c/i:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [0 argv+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 9 8 10 2 c:/mingw2/bin/../lib/gcc/i686-pc-mingw32/4.2.5/../../../../include/GL/glut.h:486 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 58 [ argv ])) 34 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/f:SI 58 [ argv ])
        (nil)))

(insn 10 9 11 2 c:/mingw2/bin/../lib/gcc/i686-pc-mingw32/4.2.5/../../../../include/GL/glut.h:486 (set (reg/f:SI 59 [ argcp ])
        (mem/c/i:SI (reg/f:SI 16 argp) [0 argcp+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 11 10 12 2 c:/mingw2/bin/../lib/gcc/i686-pc-mingw32/4.2.5/../../../../include/GL/glut.h:486 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 59 [ argcp ])) 34 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/f:SI 59 [ argcp ])
        (nil)))

(call_insn 12 11 13 2 c:/mingw2/bin/../lib/gcc/i686-pc-mingw32/4.2.5/../../../../include/GL/glut.h:486 (parallel [
            (call (mem:QI (symbol_ref:SI ("__glutInitWithExit@12") [flags 0x41] <function_decl 02041540 __glutInitWithExit>) [0 S1 A8])
                (const_int 12 [0xc]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 13 12 14 2 c:/mingw2/bin/../lib/gcc/i686-pc-mingw32/4.2.5/../../../../include/GL/glut.h:486 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 14 13 0 NOTE_INSN_FUNCTION_END)


;; Function int main(int, char**) (main)



Pass 0

  Register 58 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FLOAT_INT_REGS:18000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:18000 ALL_REGS:18000 MEM:7000
  Register 59 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FLOAT_INT_REGS:18000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:18000 ALL_REGS:18000 MEM:7000
  Register 60 costs: AREG:0 DREG:0 CREG:-1000 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FLOAT_INT_REGS:27000 INT_SSE_REGS:27000 FLOAT_INT_SSE_REGS:27000 ALL_REGS:27000 MEM:12000
  Register 61 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FLOAT_INT_REGS:18000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:18000 ALL_REGS:18000 MEM:8000

  Register 53 pref FLOAT_INT_SSE_REGS or none
  Register 54 pref FLOAT_INT_SSE_REGS or none
  Register 55 pref FLOAT_INT_SSE_REGS or none
  Register 56 pref FLOAT_INT_SSE_REGS or none
  Register 57 pref FLOAT_INT_SSE_REGS or none
  Register 58 pref GENERAL_REGS or none
  Register 59 pref AREG, else GENERAL_REGS
  Register 60 pref CREG, else GENERAL_REGS
  Register 61 pref GENERAL_REGS or none
  Register 62 pref FLOAT_INT_SSE_REGS or none
63 registers.

Register 58 used 2 times across 2 insns in block 2; set 1 time; GENERAL_REGS or none.

Register 59 used 2 times across 2 insns in block 2; set 1 time; pref AREG, else GENERAL_REGS.

Register 60 used 3 times across 5 insns in block 2; set 1 time; crosses 1 call; pref CREG, else GENERAL_REGS; pointer.

Register 61 used 2 times across 2 insns in block 2; set 1 time; GENERAL_REGS or none; pointer.

3 basic blocks, 2 edges.

Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 0.
Predecessors:  ENTRY (fallthru)
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Register 58 in 0.
;; Register 59 in 0.
;; Register 60 in 3.
;; Register 61 in 0.
(note 1 0 6 ("main.cpp") 75)

;; Start of basic block 2, registers live: 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 6 3 2 NOTE_INSN_DELETED)

(insn 3 2 4 2 main.cpp:75 (set (reg/f:SI 60)
        (reg:SI 2 cx)) 34 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 2 cx)
        (nil)))

(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)

(call_insn 5 4 8 2 main.cpp:75 (call (mem:QI (symbol_ref:SI ("__main") [flags 0x41]) [0 S1 A8])
        (const_int 0 [0x0])) 385 {*call_0} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(note 8 5 9 2 ("main.cpp") 76)

(insn 9 8 10 2 main.cpp:76 (set (reg/f:SI 61 [ argv ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 60)
                (const_int 4 [0x4])) [0 argv+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 10 9 11 2 main.cpp:76 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 61 [ argv ])) 34 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/f:SI 61 [ argv ])
        (nil)))

(insn 11 10 12 2 main.cpp:76 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 60)) 34 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/f:SI 60)
        (nil)))

(call_insn 12 11 13 2 main.cpp:76 (parallel [
            (call (mem:QI (symbol_ref:SI ("glutInit_ATEXIT_HACK@8") [flags 0x3] <function_decl 020415B0 glutInit_ATEXIT_HACK>) [0 S1 A8])
                (const_int 8 [0x8]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 13 12 14 2 main.cpp:76 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffff8])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 14 13 15 2 ("main.cpp") 77)

(insn 15 14 16 2 main.cpp:77 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (const_int 2 [0x2])) 34 {*movsi_1} (nil)
    (nil))

(call_insn 16 15 17 2 main.cpp:77 (parallel [
            (call (mem:QI (symbol_ref:SI ("glutInitDisplayMode@4") [flags 0x41] <function_decl 02041690 glutInitDisplayMode>) [0 S1 A8])
                (const_int 4 [0x4]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 17 16 18 2 main.cpp:77 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 18 17 19 2 ("main.cpp") 78)

(insn 19 18 20 2 main.cpp:78 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 500 [0x1f4])) 34 {*movsi_1} (nil)
    (nil))

(insn 20 19 21 2 main.cpp:78 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (const_int 500 [0x1f4])) 34 {*movsi_1} (nil)
    (nil))

(call_insn 21 20 22 2 main.cpp:78 (parallel [
            (call (mem:QI (symbol_ref:SI ("glutInitWindowSize@8") [flags 0x41] <function_decl 020417E0 glutInitWindowSize>) [0 S1 A8])
                (const_int 8 [0x8]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 22 21 23 2 main.cpp:78 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffff8])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 23 22 24 2 ("main.cpp") 79)

(insn 24 23 25 2 main.cpp:79 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 0 [0x0])) 34 {*movsi_1} (nil)
    (nil))

(insn 25 24 26 2 main.cpp:79 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (const_int 0 [0x0])) 34 {*movsi_1} (nil)
    (nil))

(call_insn 26 25 27 2 main.cpp:79 (parallel [
            (call (mem:QI (symbol_ref:SI ("glutInitWindowPosition@8") [flags 0x41] <function_decl 02041770 glutInitWindowPosition>) [0 S1 A8])
                (const_int 8 [0x8]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 27 26 28 2 main.cpp:79 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffff8])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 28 27 29 2 ("main.cpp") 80)

(insn 29 28 30 2 main.cpp:80 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref/f:SI ("*LC14") [flags 0x2] <string_cst 02088500>)) 34 {*movsi_1} (nil)
    (nil))

(call_insn 30 29 31 2 main.cpp:80 (parallel [
            (set (reg:SI 0 ax)
                (call (mem:QI (symbol_ref:SI ("glutCreateWindow_ATEXIT_HACK@4") [flags 0x3] <function_decl 020419A0 glutCreateWindow_ATEXIT_HACK>) [0 S1 A8])
                    (const_int 4 [0x4])))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) 548 {*call_value_pop_0} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (nil))

(insn 31 30 32 2 main.cpp:80 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 32 31 33 2 ("main.cpp") 81)

(insn 33 32 34 2 main.cpp:81 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref:SI ("_Z9myDisplayv") [flags 0x3] <function_decl 02059AF0 myDisplay>)) 34 {*movsi_1} (nil)
    (nil))

(call_insn 34 33 35 2 main.cpp:81 (parallel [
            (call (mem:QI (symbol_ref:SI ("glutDisplayFunc@4") [flags 0x41] <function_decl 0204ABD0 glutDisplayFunc>) [0 S1 A8])
                (const_int 4 [0x4]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 35 34 36 2 main.cpp:81 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 36 35 37 2 ("main.cpp") 82)

(insn 37 36 38 2 main.cpp:82 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref:SI ("_Z10myKeyboardhii") [flags 0x3] <function_decl 02059D90 myKeyboard>)) 34 {*movsi_1} (nil)
    (nil))

(call_insn 38 37 39 2 main.cpp:82 (parallel [
            (call (mem:QI (symbol_ref:SI ("glutKeyboardFunc@4") [flags 0x41] <function_decl 0204ACB0 glutKeyboardFunc>) [0 S1 A8])
                (const_int 4 [0x4]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 39 38 40 2 main.cpp:82 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 40 39 41 2 ("main.cpp") 83)

(insn 41 40 42 2 main.cpp:83 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (const_int 0 [0x0])) 34 {*movsi_1} (nil)
    (nil))

(insn 42 41 43 2 main.cpp:83 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (symbol_ref:SI ("_Z9myTimeOuti") [flags 0x3] <function_decl 02059CB0 myTimeOut>)) 34 {*movsi_1} (nil)
    (nil))

(insn 43 42 44 2 main.cpp:83 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (const_int 100 [0x64])) 34 {*movsi_1} (nil)
    (nil))

(call_insn 44 43 45 2 main.cpp:83 (parallel [
            (call (mem:QI (symbol_ref:SI ("glutTimerFunc@12") [flags 0x41] <function_decl 02051000 glutTimerFunc>) [0 S1 A8])
                (const_int 12 [0xc]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 45 44 46 2 main.cpp:83 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 46 45 47 2 ("main.cpp") 84)

(insn 47 46 48 2 main.cpp:84 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref:SI ("_Z6resizeii") [flags 0x3] <function_decl 02059BD0 resize>)) 34 {*movsi_1} (nil)
    (nil))

(call_insn 48 47 49 2 main.cpp:84 (parallel [
            (call (mem:QI (symbol_ref:SI ("glutReshapeFunc@4") [flags 0x41] <function_decl 0204AC40 glutReshapeFunc>) [0 S1 A8])
                (const_int 4 [0x4]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) 383 {*call_pop_0} (nil)
    (nil)
    (nil))

(insn 49 48 50 2 main.cpp:84 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 50 49 51 2 ("main.cpp") 85)

(call_insn 51 50 52 2 main.cpp:85 (call (mem:QI (symbol_ref:SI ("_Z4initv") [flags 0x3] <function_decl 02059E70 init>) [0 S1 A8])
        (const_int 0 [0x0])) 385 {*call_0} (nil)
    (nil)
    (nil))

(note 52 51 53 2 ("main.cpp") 86)

(call_insn 53 52 54 2 main.cpp:86 (call (mem:QI (symbol_ref:SI ("glutMainLoop@0") [flags 0x41] <function_decl 02041850 glutMainLoop>) [0 S1 A8])
        (const_int 0 [0x0])) 385 {*call_0} (nil)
    (nil)
    (nil))

(note 54 53 55 2 ("main.cpp") 0)

(insn 55 54 56 2 main.cpp:86 (set (reg:SI 58 [ D.34514 ])
        (const_int 0 [0x0])) 34 {*movsi_1} (nil)
    (nil))

(insn 56 55 59 2 main.cpp:86 (set (reg:SI 59 [ <result> ])
        (reg:SI 58 [ D.34514 ])) 34 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 58 [ D.34514 ])
        (nil)))

(note 59 56 60 2 NOTE_INSN_FUNCTION_END)

(note 60 59 62 2 ("main.cpp") 87)

(insn 62 60 68 2 main.cpp:87 (set (reg/i:SI 0 ax [ <result> ])
        (reg:SI 59 [ <result> ])) 34 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 59 [ <result> ])
        (nil)))

(insn 68 62 0 2 main.cpp:87 (use (reg/i:SI 0 ax [ <result> ])) -1 (nil)
    (nil))
;; End of basic block 2, registers live:
 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

